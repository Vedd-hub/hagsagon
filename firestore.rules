rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if the user is authenticated
    function isAuth() {
      return request.auth != null;
    }
    
    // Helper function to check if the user is updating their own document
    function isUser(userId) {
      return isAuth() && request.auth.uid == userId;
    }
    
    // Helper function to check if the user is an admin
    function isAdmin() {
      return isAuth() && exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Users collection rules
    match /users/{userId} {
      // Allow all authenticated users to read all user profiles
      allow read: if isAuth();
      allow create, update: if isUser(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Chapters collection rules
    match /chapters/{chapterId} {
      // Anyone can read chapters
      // Only admins can create, update or delete
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Quizzes collection rules
    match /quizzes/{quizId} {
      // Anyone can read quizzes
      // Only admins can create, update or delete
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // LexIQ words collection rules
    match /lexiq/{wordId} {
      // Anyone can read words
      // Only admins can create, update or delete
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Announcements collection rules
    match /announcements/{announcementId} {
      // Anyone can read announcements
      // Only admins can create, update or delete
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Battles collection rules
    match /battles/{battleId} {
      allow create, read, update: if isAuth();
      allow delete: if isAdmin();
    }
    
    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 